#!/bin/sh
journalctl -u isc-dhcp-server.service \
| awk 'BEGIN {
	month = 1
	day = 2
	time = 3
	localhost = 4
	service = 5
	order = 6
	connector = 7
	ip = 8
	connector2 = 9
	mac = 10
	hostname = 11

	OFS="\t"
}
# Por cada admisión de DHCP,
# asignar a el servidor la IP.
#
/DHCPACK/ {
	if (is_hostname($hostname)) {
		gsub(/[()]/, "", $hostname)
	} else {
		next
	}

	# registrar servidores nuevos
	if (! has_content(ips[$hostname])) {
		# contar el número de servidores
		n++
		# guardar el servidor nuevo
		servers[n] = $hostname
	}

	# asignar la ip al servidor
	ips[$hostname] = $ip
}

# Al terminar:
# imprimir la IP de cada servidor
END {
	host_header()
	for (i = 1; i <= n; i++) {
		print ips[servers[i]], servers[i] ".cluster.inmegen.gob.mx"
	}
}

function host_header() {
	"hostname" | getline host
	print "127.0.0.1       localhost\n127.0.1.1       " host "    " host ".cluster.inmegen.gob.mx\n\n# The following lines are desirable for IPv6 capable hosts\n::1     localhost ip6-localhost ip6-loopback\nff02::1	ip6-allnodes\nff02::2	ip6-allrouters\n\n192.168.105.220 fai.cluster.inmegen.gob.mx      repo.cluster.inmegen.gob.mx     apt.cluster.inmegen.gob.mx      cluster.inmegen.gob.mx  git.cluster.inmegen.gob.mx\n192.168.105.221 castillo.cluster.inmegen.gob.mx arenero.cluster.inmegen.gob.mx  sarlacc.cluster.inmegen.gob.mx\n\n"
}

function is_hostname(str) {
	if (str ~ /^\([^)]+\)$/) { return 1 } else { return 0 }
}

function has_content(a) {
        if (length(a) > 1) {return 1} else {return 0}
}'
